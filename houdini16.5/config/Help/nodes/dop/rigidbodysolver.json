{"body": [{"indent": 0, "text": ["Rigid Body Solver"], "type": "title", "level": 0}, {"indent": 0, "type": "summary", "text": [" Sets and configures a Rigid Body Dynamics solver. "]}, {"indent": 0, "type": "para", "text": ["The RBD Solver DOP sets objects to use the Rigid Body Dynamics solver."]}, {"indent": 0, "type": "para", "text": ["If an object has this DOP as its ", {"text": ["Solver"], "type": "code"}, " subdata, it will evolve itself as an ", {"text": ["RBD Object"], "fullpath": "/nodes/dop/rbdobject", "scheme": "Node", "type": "link", "value": "/nodes/dop/rbdobject"}, "."]}, {"indent": 0, "type": "para", "text": ["This solver is a union of two different rigid body engines, the RBD engine and the Bullet engine.\nThe RBD engine uses volumes and is useful for complicated, deforming, stacked, geometry.\nThe Bullet engine offers simpler collision shapes and is suitable for fast, large-scale simulations."]}, {"indent": 0, "type": "para", "text": ["Details on the first engine are found in the ", {"text": ["RBD Solver"], "fullpath": "/nodes/dop/rbdsolver", "scheme": "Node", "type": "link", "value": "/nodes/dop/rbdsolver"}, "."]}, {"indent": 0, "type": "para", "text": ["The RBD and Bullet engines also have support for voronoi fracturing. For more information see the ", {"text": ["Voronoi Fracture Solver"], "fullpath": "/nodes/dop/voronoifracturesolver", "scheme": "Node", "type": "link", "value": "/nodes/dop/voronoifracturesolver"}, " help. You must have a ", {"text": ["Voronoi Fracture Configure Object"], "fullpath": "/nodes/dop/voronoifractureconfigureobject", "scheme": "Node", "type": "link", "value": "/nodes/dop/voronoifractureconfigureobject"}, " for voronoi fracturing to work."]}, {"indent": 0, "type": "para", "text": ["Details on the second engine are found in the ", {"text": ["Bullet Solver"], "fullpath": "/nodes/dop/bulletrbdsolver", "scheme": "Node", "type": "link", "value": "/nodes/dop/bulletrbdsolver"}, "."]}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["Choose between a Bullet or RBD Solver."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Solver Engine"]}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["The number of substeps for each simulation step, used by Bullet internally. Increasing this number will increase the resolution of the simulation."]}, {"indent": 4, "type": "para", "text": ["In Bullet\u2019s documentation:"]}, {"lang": null, "indent": 4, "type": "pre", "text": ["\n        maxSubSteps = substeps + 1\n        fixedTimeStep = timeStep / substeps\n        "]}, {"indent": 4, "type": "para", "text": ["Houdini adds 1 to ", {"text": ["maxSubSteps"], "type": "code"}, " to account for roundoff errors during division when substeps > 1."]}, {"indent": 4, "type": "para", "text": ["See ", {"text": ["Stepping the World"], "scheme": null, "type": "link", "exists": true, "value": "http://bulletphysics.org/mediawiki-1.5.8/index.php/Stepping_The_World"}, "."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Number of Substeps"]}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "text": ["An object can only be put to sleep once any nearby objects and objects it is constrained to are also eligible to be put to sleep."]}], "indent": 4, "type": "dt", "text": ["When an object\u2019s speed has been below its linear and angular speed thresholds for this amount of time, the object is eligible to be deactivated and put to sleep. This can improve performance for simulations where there are some stationary objects.\n    NOTE"]}], "container": true, "type": "dt_group"}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Sleeping Time"]}], "container": true, "type": "parameters_item_group"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "text": ["Specifies which constraint solver Bullet will use to resolve collisions\n        and constraints. Both solvers parallelize the workload, but differ in the\n        strategy they use to do so. ", {"text": ["Parallel Gauss-Seidel (Islands)"], "type": "ui"}, " will be\n        faster in cases that involve many small \"islands\" of interacting objects\n        (for example, a large number of small separate book stacks), whereas\n        ", {"text": ["Parallel Gauss-Seidel (Graph Coloring)"], "type": "ui"}, " should perform better when\n        such \"islands\" are few and large (such as a huge collapsing building)."]}, {"indent": 8, "type": "para", "text": ["Although results obtained with these solvers will generally not be\n        identical, qualitative differences should be minor."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Constraint Solver"]}, {"body": [{"indent": 8, "type": "para", "text": ["The more iterations you use, the more accurate the constraint and collision handling will be."]}, {"indent": 8, "type": "para", "text": ["See ", {"text": ["Advanced constraint solver settings"], "scheme": null, "type": "link", "exists": true, "value": "http://bulletphysics.org/mediawiki-1.5.8/index.php/BtContactSolverInfo"}, "."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Constraint Iterations"]}, {"body": [{"indent": 8, "type": "para", "text": ["Allows the constraint solver to terminate before performing the full number of ", {"text": ["Constraint Iterations"], "type": "ui"}, " if it is close enough to the solution.\n        Larger values can increase performance at the cost of accuracy."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Solve Tolerance"]}, {"body": [{"indent": 8, "type": "para", "text": ["Increasing the CFM (constraint force mixing) parameter will make\n        contact constraints softer, and may increase the stability of the\n        simulation. Contact constraints may be violated by an amount\n        proportional to this parameter times the force that is needed to\n        enforce the constraint."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Contact CFM"]}, {"body": [{"indent": 8, "type": "para", "text": ["Specifies what proportion of the constraint error for contact\n        constraints will be fixed during the next simulation step. If ERP\n        (error reduction parameter) is set to 0, constrained objects will drift\n        apart as the simulation proceeds. If ERP is set to 1, the solver will\n        attempt to fix all constraint error during the next simulation step\n        (however, this may result in instability in some situations). A value\n        between 0.1 and 0.8 is recommended for most simulations."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Contact ERP"]}, {"body": [{"indent": 8, "type": "para", "text": ["Specifies that the constraints should be randomly reordered before each\n        of the ", {"text": ["Constraint Iterations"], "type": "ui"}, ". This may improve stability, but\n        incurs a minor performance hit."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Randomize Constraint Order"]}, {"body": [{"indent": 8, "type": "para", "text": ["Tries to make interpenetrating objects split without adding velocity (to keep objects from explosively flying apart)."]}, {"indent": 8, "type": "para", "text": ["See ", {"text": ["Split Impulse"], "scheme": null, "type": "link", "exists": true, "value": "http://bulletphysics.org/mediawiki-1.5.8/index.php/BtContactSolverInfo#Split_Impulse"}, "."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Split Impulse"]}, {"body": [{"indent": 8, "type": "para", "text": [{"text": ["Split Impulse"], "type": "ui"}, " only applies when objects interpenetrate by more than this distance. This number should be negative (representing less than 0 distance between the objects)."]}, {"indent": 8, "type": "para", "text": ["See ", {"text": ["Split Impulse"], "scheme": null, "type": "link", "exists": true, "value": "http://bulletphysics.org/mediawiki-1.5.8/index.php/BtContactSolverInfo#Split_Impulse"}, "."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Penetration Threshold"]}, {"body": [{"indent": 8, "type": "para", "text": ["Overrides the ", {"text": ["Error Reduction Parameter"], "type": "ui"}, " for contact constraints\n        where the penetration distance is within the ", {"text": ["Penetration Threshold"], "type": "ui"}, "\n        and ", {"text": ["Split Impulse"], "type": "ui"}, " is enabled."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Split Impulse ERP"]}], "container": true, "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Constraint Solver"], "container": true, "type": "h", "id": null}], "indent": 0, "level": 2, "text": ["Bullet"], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["The RBD Solver will break a full timestep into at least this\n    number of substeps. "]}, {"indent": 4, "type": "para", "text": ["By increasing this, you can guarantee a\n    minimum fineness to the substepping. This can be used if for\n    some reason the automatic computations are too coarse."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Minimum Substeps"]}, {"body": [{"indent": 4, "type": "para", "text": ["The RBD Solver will not break the simulation down into more\n    substeps than this. "]}, {"indent": 4, "type": "para", "text": ["It is a very good idea to always have a\n    maximum to ensure frames will be finished regardless of their\n    complexity. Lowering this ceiling can ensure a minimum\n    computation time at the expense of accuracy."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Maximum Substeps"]}, {"body": [{"indent": 4, "type": "para", "text": ["The CFL Condition is a factor used for automatically\n    determining what size substep a scene requires. The idea is that\n    any substep should not allow any objects to interpenetrate by\n    more than one voxel cell. "]}, {"indent": 4, "type": "para", "text": ["This condition is met when this\n    parameter is at 1. A value of 10 would allow a substep to\n    interpenetrate by as many as 10 voxel cells. This could allow\n    objects to tunnel through each other rather than properly\n    bounce."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["CFL Condition"]}], "container": true, "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Substeps"], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["The stack solver iterates over all objects looking for\n    ballistic collisions. Because resolving one collision may create\n    a collision elsewhere, this cannot be resolved in a single pass\n    with a local solution. "]}, {"indent": 4, "type": "para", "text": ["The stack solver will thus repeat the\n    collision resolution until either no collisions are found, or\n    this pass count is reached."]}, {"indent": 4, "type": "para", "text": ["Even if a collision is not fully resolved with these passes, it\n    will still be cleaned up in the Contact Pass. The main\n    difference is that it will become inelastic."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Collision Passes"]}, {"body": [{"indent": 4, "type": "para", "text": ["The stack solver iterates over all objects, looking for cases\n    where resting contact requires an acceleration to be adjusted."]}, {"indent": 4, "type": "para", "text": ["Multiply stacked objects are common, so this often has\n    complicated interrelationships, so requires multiple passes to\n    converge."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Contact Passes"]}, {"body": [{"indent": 4, "type": "para", "text": ["Resting objects have a higher stability requirement than\n    bouncing objects. Thus, the object is not immediately brought to\n    a standstill, but slowed over multiple iterations to allow the\n    system to stabilize. "]}, {"indent": 4, "type": "para", "text": ["This is the number of steps to do this for\n    every contact pass."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["SubContact Passes"]}, {"body": [{"indent": 4, "type": "para", "text": ["These passes are very similar to Contact Passes. "]}, {"indent": 4, "type": "para", "text": ["The main\n    difference is that if a book were resting on a table, the table\n    would be assigned infinite mass in this pass. This prevents the\n    table from shifting into the ground, allowing the system to\n    converge faster."]}, {"indent": 4, "type": "para", "text": ["As a rule of thumb, set this to the expected maximum number\n    of stacked objects. If you plane to have ten tables stacked\n    on top of one another in a stable configuration, a value of\n    10 can help ensure that the stacking is fully resolved."]}, {"indent": 4, "type": "para", "text": ["If your objects come to rest appropriately, but then seem to\n    slowly start to sink through each other, increasing Shock\n    Propagation can be the right answer."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Shock Propagation"]}, {"body": [{"indent": 4, "type": "para", "text": ["These passes are a final attempt to prevent any\n    interpenetration. Like Shock Propagation, it is attempted to\n    process objects from bottom up. "]}, {"indent": 4, "type": "para", "text": ["If a book is resting on a table\n    and is penetrating the table, the book will be moved to lie\n    outside of the table. This will be performed even if the book is\n    at rest on the table."]}, {"indent": 4, "type": "para", "text": ["The penetration recover repeated until there are no more\n    penetrations up to the maximum number provided by this\n    parameter."]}, {"indent": 4, "type": "para", "text": ["The SubContact Passes is used to slowly feather the objects\n    apart. Rather than immediately moving the book outside of the\n    table, it is done in over the given number of subcontact passes.\n    This is done to attempt to stabilize the process when\n    complicated overlaps occur."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Resolve Penetrations"]}, {"body": [{"indent": 4, "type": "para", "text": ["Determines if changes in the point positions will be used in\n    collision resolution. Note that this is different from the\n    Inherit Velocity option of RBD State. This flag only governs if\n    velocity attributes are used for collisions, not for setting up\n    the initial velocities."]}, {"indent": 4, "type": "para", "text": ["When this is set, the object is inspected for any per point\n    velocity attribute. If present, it is assumed to be a local\n    deformation vector and is used to improve collision response."]}, {"indent": 4, "type": "para", "text": ["If no point velocities are present, the geometry is compared\n    between the two frames to manually calculate the per-point\n    velocity. Note that if your deformation is a function of $F you\n    may not get expected results as that is a step function, use $FF\n    instead."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Use Point Velocity for Collisions"]}, {"body": [{"indent": 4, "type": "para", "text": ["Determines if changes to the volumetric representation will be\n    used in collision resolution."]}, {"indent": 4, "type": "para", "text": ["When this is set the volumetric representation is compared\n    between this frame and the previous frame. The difference is\n    used to compute a velocity of the surface\u2019s deformation. This\n    allows deforming objects to interact plausibly. "]}, {"body": [{"body": [{"indent": 8, "type": "para", "text": ["This method can handle changing topologies, but cannot"]}], "indent": 4, "role": "item", "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}, {"indent": 4, "type": "para", "text": ["discover tangential deformational velocities."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Use Volume Velocity for Collisions"]}, {"body": [{"indent": 4, "type": "para", "text": ["When objects are resting on top of one another, they still receive impacts due to the force of gravity.  This option prevents these from being added to the glue impulse, making it easier to prevent things from falling apart under their own gravity."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Glue Ignores Resting Objects"]}, {"body": [{"indent": 4, "type": "para", "text": ["During the RBD solving process, numerous impacts are calculated\n    between the RBD objects. These are normally not recorded in\n    order to save time. "]}, {"indent": 4, "type": "para", "text": ["If this is set, however, all such impacts\n    will be recorded by attaching an Impacts/RBDImpacts data to the\n    objects that collide."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Add Impact Data"]}, {"body": [{"indent": 4, "type": "para", "text": ["In simulations with a large number of objects, it is helpful to\n    use various space partitioning schemes to reduce the work in\n    finding collisions. This option selects one of these schemes."]}, {"indent": 4, "type": "para", "text": ["None means that no attempt at spatial subdivision will occur."]}, {"indent": 4, "type": "para", "text": ["Sphere means the objects will be treated as spheres and trivial\n    intersection detection will be done with these spheres. This is\n    fast, but with long skinny objects could cause false positives."]}, {"indent": 4, "type": "para", "text": ["OBB means Oriented Bounding Boxes. While this provides a tight\n    bound on long skinny objects, building the spatial partitioning\n    tree is slow and will often exceed the benefits."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Culling Method"]}, {"body": [{"indent": 4, "type": "para", "text": ["Controls whether and how Houdini groups similar points together\n    when it calculates point collisions."]}, {"indent": 4, "type": "para", "text": ["If you set this parameter to a value other than \"none\", Houdini\n    will treat similar points (that is, points within the distance\n    specified in the ", {"text": ["Contact grouping tolerance"], "type": "ui"}, " below) as a\n    single point for the purpose of calculating collisions."]}, {"indent": 4, "type": "para", "text": ["This is useful when you have an object such as a cube, where the\n    geometry points (the corners of the cube) are spaced far apart.\n    One corner might impact a ground plane first, then the cube\n    bounces and rotates so the opposite corner hits, which bounces\n    and rotates, causing jitter when the cube hits. "]}, {"indent": 4, "type": "para", "text": ["If you set the ", {"text": ["Contact Grouping Method"], "type": "ui"}, " to \"Average\", Houdini will calculate the hit based on an average point between the corners, giving a more\n    stable result with less jitter."]}, {"indent": 4, "type": "para", "text": ["This is similar to the effect of turning on ", {"text": ["Edge\n    representation"], "type": "ui"}, " in the ", {"text": ["Surface"], "type": "ui"}, " tab of an ", {"text": ["RBD\n    Object"], "fullpath": "/nodes/dop/rbdobject", "scheme": "Node", "type": "link", "value": "/nodes/dop/rbdobject"}, " node. If you have sparse geometry\n    with sharp edges, such as a cube, you may want to turn on both\n    these options."]}, {"indent": 4, "type": "para", "text": ["To see the effect of contact groupings, create a simulation\n    where you drop a cube onto a ground plane. Attach an ", {"text": ["RBD\n    Visualization DOP"], "fullpath": "/nodes/dop/rbdvisualization", "scheme": "Node", "type": "link", "value": "/nodes/dop/rbdvisualization"}, " to see the\n    resulting impacts."]}, {"body": [{"body": [{"indent": 8, "type": "para", "text": ["Calculate collisions for each point independently. Do not\n        attempt to merge similar collision points."]}], "indent": 4, "type": "dt", "text": ["None"]}, {"body": [{"indent": 8, "type": "para", "text": ["Group similar points together as the one point that is most\n        in-line with the center of mass of the object. This uses\n        only points from the original geometry and biases collision\n        points to stable points."]}], "indent": 4, "type": "dt", "text": ["Most central point"]}, {"body": [{"indent": 8, "type": "para", "text": ["Average similar points together to calculate the collision\n        point. "]}, {"indent": 8, "type": "para", "text": ["This reflects the geometry of the actual collision\n        better than \"Most central point\", but may result in a point\n        that does not lie on the original geometry."]}], "indent": 4, "type": "dt", "text": ["Average point"]}], "container": true, "type": "dt_group"}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Contact Grouping Method"]}, {"body": [{"indent": 4, "type": "para", "text": ["The distance within which points are grouped together when\n    ", {"text": ["Contact grouping method"], "type": "ui"}, " is not \"none\"."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Contact Grouping Tolerance"]}], "container": true, "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Collisions"], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["The minimum volume for any piece geometry created by this solver.  This can avoid creating geometry that is too small for the ", {"text": ["RBD Solver"], "fullpath": "/nodes/dop/rbdsolver", "scheme": "Node", "type": "link", "value": "/nodes/dop/rbdsolver"}, " to handle in a stable manner."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Minimum Piece Volume"]}, {"body": [{"indent": 4, "type": "para", "text": ["The tolerance to use when fusing clustered pieces together."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Fuse Tolerance"]}, {"body": [{"indent": 4, "type": "para", "text": ["Creates an attribute called ", {"text": ["creationtime"], "type": "code"}, " on all newly-created interior primitives that stores their creation time.  This can be useful for effects such as emitting particles for debris for a short amount of time after the initial fracture of a primitive."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Stamp Interior Primitives With Creation Time"]}, {"body": [{"indent": 4, "type": "para", "text": ["Usually fracturing is driven only by objects that solve before this object\n    in the frame.  If two-way coupling between different solvers is done using\n    feedbacks, this option allows those feedback effects to also trigger\n    fracturing."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Allow Fracturing From Feedback"]}, {"body": [{"indent": 4, "type": "para", "text": ["Impacts generated by objects merely resting on each other will not be considered for fracturing."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Fracture Ignores Resting Objects"]}, {"body": [{"indent": 4, "type": "para", "text": ["This value is used to initialize the pseudo-random sequence used to generate fracture points during the simulation.  It is useful for generating different simulations from the same network."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Random Seed"]}, {"body": [{"indent": 4, "type": "para", "text": ["The fracturing only works with polygonal geometry.  This option auto-converts the geometry into polygons at the given LOD.  This conversion only happens when the fracturing occurs."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Convert to Poly"]}, {"body": [{"type": "para", "indent": 4, "text": ["Each data option parameter has an associated menu which specifies\n    how that parameter operates."]}, {"body": [{"body": [{"type": "para", "indent": 8, "text": ["Use the value from the Default Operation menu."]}], "type": "dt", "indent": 4, "text": ["Use Default "]}, {"body": [{"type": "para", "indent": 8, "text": ["Set the value of this parameter only when this data is created.\n        On all subsequent timesteps, the value of this parameter is not\n        altered. This is useful for setting up initial conditions like\n        position and velocity."]}], "type": "dt", "indent": 4, "text": ["Set Initial "]}, {"body": [{"type": "para", "indent": 8, "text": ["Always set the value of this parameter. This is useful when\n        specific keyframed values are required over time. This could be\n        used to keyframe the position of an object over time, or to\n        cause the geometry from a SOP to be refetched at each timestep\n        if the geometry is deforming. "]}, {"type": "para", "indent": 8, "text": ["You can also use this setting in\n        conjunction with the local variables for a parameter value to\n        modify a value over time. For example, in the X Position, an\n        expression like ", {"text": ["$tx + 0.1"], "type": "code"}, " would cause the object to\n        move 0.1 units to the right on each timestep."]}], "type": "dt", "indent": 4, "text": ["Set Always "]}, {"body": [{"type": "para", "indent": 8, "text": ["Do not ever set the value of this parameter. This option is most\n        useful when using this node to modify an existing piece of data\n        connected through the first input. "]}, {"type": "para", "indent": 8, "text": ["For example, an ", {"text": ["RBD State\n        DOP"], "fullpath": "/nodes/dop/rbdstate", "scheme": "Node", "type": "link", "value": "/nodes/dop/rbdstate"}, " may want to animate just the mass of an\n        object, and nothing else. The ", {"text": ["Set Never"], "type": "ui"}, " option could be used\n        on all parameters except for ", {"text": ["Mass"], "type": "ui"}, ", which would use ", {"text": ["Set\n        Always"], "type": "ui"}, "."]}], "type": "dt", "indent": 4, "text": ["Set Never "]}], "type": "dt_group", "container": true}], "type": "parameters_item", "role": "item", "indent": 0, "text": ["Parameter Operations"]}, {"body": [{"type": "para", "indent": 4, "text": ["For any parameters with their ", {"text": ["Operation"], "type": "ui"}, " menu set to ", {"text": ["Use\n    Default"], "type": "ui"}, ", this parameter controls what operation is used. "]}, {"type": "para", "indent": 4, "text": ["This\n    parameter has the same menu options and meanings as the ", {"text": ["Parameter\n    Operations"], "type": "ui"}, " menus, but without the ", {"text": ["Use Default"], "type": "ui"}, " choice."]}], "type": "parameters_item", "role": "item", "indent": 0, "text": ["Default Operation"]}, {"body": [{"indent": 4, "type": "para", "text": ["All objects connected to the first input of this node become mutual\n    affectors. "]}, {"indent": 4, "type": "para", "text": ["This is equivalent to using an ", {"text": ["Affector\n    DOP"], "fullpath": "/nodes/dop/affector", "scheme": "Node", "type": "link", "value": "/nodes/dop/affector"}, " to create an affector relationship between\n    ", {"text": ["*"], "type": "code"}, " and ", {"text": ["*"], "type": "code"}, " before connecting it to this node. This option makes it\n    convenient to have all objects feeding into a solver node affect\n    each other."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Make Objects Mutual Affectors"]}, {"body": [{"type": "para", "indent": 4, "text": ["When an object connector is attached to the first input of this\n    node, this parameter can be used to choose a subset of those objects\n    to be affected by this node."]}], "indent": 0, "text": ["Group"], "role": "item", "attrs": {"channels": "/group"}, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "text": ["Indicates the name that should be used to attach the data to an\n    object or other piece of data. If the Data Name contains a \"/\" (or\n    several), that indicates traversing inside subdata. "]}, {"type": "para", "indent": 4, "text": ["For example, if the ", {"text": ["Fan Force DOP"], "fullpath": "/nodes/dop/fan", "scheme": "Node", "type": "link", "value": "/nodes/dop/fan"}, " has the default Data Name\n    \"Forces/Fan\". This attaches the data with the name \"Fan\" to an\n    existing piece of data named \"Forces\". If no data named \"Forces\"\n    exists, a simple piece of container data is created to hold the\n    \"Fan\" subdata."]}, {"type": "para", "indent": 4, "text": ["Different pieces of data have different requirements on what names\n    should be used for them. Except in very rare situations, the default\n    value should be used. Some exceptions are described with particular\n    pieces of data or with solvers that make use of some particular type\n    of data."]}], "type": "parameters_item", "role": "item", "indent": 0, "text": ["Data Name"]}, {"body": [{"type": "para", "indent": 4, "text": ["Turning on this parameter modifies the ", {"text": ["Data Name"], "type": "ui"}, " parameter\n    value to ensure that the data created by this node is attached with\n    a unique name so it will not overwrite any existing data. "]}, {"type": "para", "indent": 4, "text": ["With this\n    parameter turned off, attaching two pieces of data with the same\n    name will cause the second one to replace the first. There are\n    situations where each type of behavior is desirable. "]}, {"type": "para", "indent": 4, "text": ["If an object\n    needs to have several ", {"text": ["Fan Forces"], "fullpath": "/nodes/dop/fan", "scheme": "Node", "type": "link", "value": "/nodes/dop/fan"}, " blowing on it, it is\n    much easier to use the ", {"text": ["Unique Data Name"], "type": "ui"}, " feature to ensure that\n    each fan does not overwrite a previous fan rather than trying to\n    change the ", {"text": ["Data Name"], "type": "ui"}, " of each fan individually to avoid\n    conflicts. "]}, {"type": "para", "indent": 4, "text": ["On the other hand, if an object is known to have ", {"text": ["RBD\n    State"], "fullpath": "/nodes/dop/rbdstate", "scheme": "Node", "type": "link", "value": "/nodes/dop/rbdstate"}, " data already attached to it, leaving this\n    option turned off will allow some new ", {"text": ["RBD State"], "fullpath": "/nodes/dop/rbdstate", "scheme": "Node", "type": "link", "value": "/nodes/dop/rbdstate"}, "\n    data to overwrite the existing data."]}], "type": "parameters_item", "role": "item", "indent": 0, "text": ["Unique Data Name"]}, {"body": [{"indent": 4, "type": "para", "text": ["The default behavior for solvers is to attach the exact same solver to all\n    of the objects specified in the group.  This allows the objects to be\n    processed in a single pass by the solver, since the parameters are identical\n    for each object.  However, some objects operate more logically on a single\n    object at a time.  In these cases, one may want to use ", {"text": ["$OBJID"], "type": "code"}, " expressions\n    to vary the solver parameters across the objects.  Setting this toggle will\n    create a separate solver per object, allowing ", {"text": ["$OBJID"], "type": "code"}, " to vary as expected."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Solver Per Object"]}], "container": true, "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Fracture"], "container": true, "type": "h", "id": null}], "indent": 0, "level": 2, "text": ["RBD"], "container": true, "type": "h", "id": null}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["The objects to solve."]}], "indent": 0, "type": "dt", "text": ["Objects"]}, {"body": [{"indent": 4, "type": "para", "text": ["Microsolvers attached to this input will run before the main solve step. For example, a ", {"text": ["SOP Solver"], "fullpath": "/nodes/dop/sopsolver", "scheme": "Node", "type": "link", "value": "/nodes/dop/sopsolver"}, " can be used to modfiy the object\u2019s geometry, and POP force nodes can be used to ", {"fragment": "#forceattributes", "text": ["apply forces"], "value": "/nodes/dop/rbdpackedobject#forceattributes", "fullpath": "/nodes/dop/rbdpackedobject#forceattributes", "scheme": "Node", "type": "link"}, " to specific objects."]}], "indent": 0, "type": "dt", "text": ["Pre-Solve"]}, {"body": [{"indent": 4, "type": "para", "text": ["Microsolvers attached to this input will run after the main solve step."]}], "indent": 0, "type": "dt", "text": ["Post-Solve"]}], "container": true, "type": "dt_group"}], "indent": 0, "level": 1, "text": "Inputs", "role": "section", "container": true, "type": "inputs_section", "id": "inputs"}, {"body": [{"body": [{"body": [{"type": "para", "indent": 4, "text": ["The operation of this output depends on what inputs are connected\n    to this node. If an object stream is input to this node, the output\n    is also an object stream containing the same objects as the input\n    (but with the data from this node attached). "]}, {"type": "para", "indent": 4, "text": ["If no object stream is\n    connected to this node, the output is a data output. This data\n    output can be connected to an ", {"text": ["Apply Data DOP"], "fullpath": "/nodes/dop/applydata", "scheme": "Node", "type": "link", "value": "/nodes/dop/applydata"}, ",\n    or connected directly to a data input of another data node, to\n    attach the data from this node to an object or another piece of\n    data."]}], "type": "dt", "indent": 0, "text": ["First Output"]}], "type": "dt_group", "container": true}], "indent": 0, "level": 1, "text": "Outputs", "role": "section", "container": true, "type": "outputs_section", "id": "outputs"}, {"body": [{"body": [{"body": [{"type": "para", "indent": 4, "text": ["This DOP node defines a local variable for each channel and\n    parameter on the Data Options page, with the same name as the\n    channel. So for example, the node may have channels for Position\n    (positionx, positiony, positionz) and a parameter for an object name\n    (objectname). "]}, {"type": "para", "indent": 4, "text": ["Then there will also be local variables with the names\n    positionx, positiony, positionz, and objectname. These variables\n    will evaluate to the previous value for that parameter. "]}, {"type": "para", "indent": 4, "text": ["This previous value is always stored as part of the data attached to the\n    object being processed. This is essentially a shortcut for a\n    dopfield expression like:"]}, {"lang": null, "type": "pre", "indent": 4, "text": ["\n    dopfield($DOPNET, $OBJID, dataName, \"Options\", 0, channelname)\n    "]}, {"type": "para", "indent": 4, "text": ["If the data does not already exist, then a value of zero or an\n    empty string will be returned."]}], "type": "dt", "indent": 0, "text": ["channelname"]}, {"body": [{"type": "para", "indent": 4, "text": ["This value is the simulation time (see variable ST) at which the\n    current data was created. This value may not be the same as the\n    current simulation time if this node is modifying existing data,\n    rather than creating new data."]}], "type": "dt", "indent": 0, "text": ["DATACT"]}, {"body": [{"type": "para", "indent": 4, "text": ["This value is the simulation frame (see variable SF) at which the\n    current data was created. This value may not be the same as the\n    current simulation frame if this node is modifying existing data,\n    rather than creating new data."]}], "type": "dt", "indent": 0, "text": ["DATACF"]}, {"body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to the\n    name of the relationship the data to which the data is being attached."]}], "type": "dt", "indent": 0, "text": ["RELNAME"]}, {"body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the object identifiers for all\n    the Affected Objects of the relationship to which the data is being\n    attached."]}], "type": "dt", "indent": 0, "text": ["RELOBJIDS"]}, {"body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the names of all the Affected\n    Objects of the relationship to which the data is being attached."]}], "type": "dt", "indent": 0, "text": ["RELOBJNAMES"]}, {"body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the object identifiers for all\n    the Affector Objects of the relationship to which the data is being\n    attached."]}], "type": "dt", "indent": 0, "text": ["RELAFFOBJIDS"]}, {"body": [{"type": "para", "indent": 4, "text": ["This value will be set only when data is being attached to a relationship\n    (such as when Constraint Anchor DOP is connected to the second, third, of\n    fourth inputs of a Constraint DOP). "]}, {"type": "para", "indent": 4, "text": ["In this case, this value is set to a\n    string that is a space separated list of the names of all the Affector\n    Objects of the relationship to which the data is being attached."]}], "type": "dt", "indent": 0, "text": ["RELAFFOBJNAMES"]}, {"body": [{"type": "para", "indent": 4, "text": ["This value is the simulation time for which the node is being\n    evaluated. "]}, {"type": "para", "indent": 4, "text": ["This value may not be equal to the current Houdini time\n    represented by the variable T, depending on the settings of the ", {"text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet", "scheme": "Node", "type": "link", "value": "/nodes/obj/dopnet"}, " ", {"text": ["Offset Time"], "type": "ui"}, " and ", {"text": ["Time Scale"], "type": "ui"}, "\n    parameters. "]}, {"type": "para", "indent": 4, "text": ["This value is guaranteed to have a value of zero at the\n    start of a simulation, so when testing for the first timestep of a\n    simulation, it is best to use a test like ", {"text": ["$ST == 0"], "type": "code"}, " rather than\n    ", {"text": ["$T == 0"], "type": "code"}, " or ", {"text": ["$FF == 1"], "type": "code"}, "."]}], "type": "dt", "indent": 0, "text": ["ST"]}, {"body": [{"type": "para", "indent": 4, "text": ["This value is the simulation frame (or more accurately, the\n    simulation time step number) for which the node is being evaluated."]}, {"type": "para", "indent": 4, "text": ["This value may not be equal to the current Houdini frame number\n    represented by the variable F, depending on the settings of the ", {"text": ["DOP\n    Network"], "fullpath": "/nodes/obj/dopnet", "scheme": "Node", "type": "link", "value": "/nodes/obj/dopnet"}, " parameters. Instead, this value is equal to\n    the simulation time (ST) divided by the simulation timestep size\n    (TIMESTEP)."]}], "type": "dt", "indent": 0, "text": ["SF"]}, {"body": [{"type": "para", "indent": 4, "text": ["This value is the size of a simulation timestep. This value is\n    useful to scale values that are expressed in units per second, but\n    are applied on each timestep."]}], "type": "dt", "indent": 0, "text": ["TIMESTEP"]}, {"body": [{"type": "para", "indent": 4, "text": ["This value is the inverse of the TIMESTEP value. It is the number\n    of timesteps per second of simulation time."]}], "type": "dt", "indent": 0, "text": ["SFPS"]}, {"body": [{"type": "para", "indent": 4, "text": ["This is the number of objects in the simulation. For nodes that\n    create objects such as the ", {"text": ["Empty Object"], "fullpath": "/nodes/dop/emptyobject", "scheme": "Node", "type": "link", "value": "/nodes/dop/emptyobject"}, " node,\n    this value will increase for each object that is evaluated. "]}, {"type": "para", "indent": 4, "text": ["A good way to guarantee unique object names is to use an expression\n    like ", {"text": ["object_$SNOBJ"], "type": "code"}, "."]}], "type": "dt", "indent": 0, "text": ["SNOBJ"]}, {"body": [{"type": "para", "indent": 4, "text": ["This value is the number of objects that will be evaluated by the\n    current node during this timestep. This value will often be\n    different from SNOBJ, as many nodes do not process all the objects\n    in a simulation. "]}, {"type": "para", "indent": 4, "text": ["This value may return 0 if the node does not\n    process each object sequentially (such as the ", {"text": ["Group\n    DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "type": "dt", "indent": 0, "text": ["NOBJ"]}, {"body": [{"type": "para", "indent": 4, "text": ["This value is the index of the specific object being processed by\n    the node. This value will always run from zero to NOBJ-1 in a given\n    timestep. This value does not identify the current object within the\n    simulation like OBJID or OBJNAME, just the object\u2019s position in the\n    current order of processing. "]}, {"type": "para", "indent": 4, "text": ["This value is useful for generating a\n    random number for each object, or simply splitting the objects into\n    two or more groups to be processed in different ways. This value\n    will be -1 if the node does not process objects sequentially (such\n    as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "type": "dt", "indent": 0, "text": ["OBJ"]}, {"body": [{"type": "para", "indent": 4, "text": ["This is the unique object identifier for the object being\n    processed. Every object is assigned an integer value that is unique\n    among all objects in the simulation for all time. Even if an object\n    is deleted, its identifier is never reused. "]}, {"type": "para", "indent": 4, "text": ["The object identifier\n    can always be used to uniquely identify a given object. This makes\n    this variable very useful in situations where each object needs to\n    be treated differently. It can be used to produce a unique random\n    number for each object, for example. "]}, {"type": "para", "indent": 4, "text": ["This value is also the best way\n    to look up information on an object using the dopfield expression\n    function. This value will be -1 if the node does not process objects\n    sequentially (such as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "type": "dt", "indent": 0, "text": ["OBJID"]}, {"body": [{"type": "para", "indent": 4, "text": ["This string contains a space separated list of the unique object\n    identifiers for every object being processed by the current node."]}], "type": "dt", "indent": 0, "text": ["ALLOBJIDS"]}, {"body": [{"type": "para", "indent": 4, "text": ["This string contains a space separated list of the names of every\n    object being processed by the current node."]}], "type": "dt", "indent": 0, "text": ["ALLOBJNAMES"]}, {"body": [{"type": "para", "indent": 4, "text": ["This value is the simulation time (see variable ST) at which the\n    current object was created. "]}, {"type": "para", "indent": 4, "text": ["Therefore, to check if an object was created\n    on the current timestep, the expression ", {"text": ["$ST == $OBJCT"], "type": "code"}, " should\n    always be used. This value will be zero if the node does not process\n    objects sequentially (such as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "type": "dt", "indent": 0, "text": ["OBJCT"]}, {"body": [{"type": "para", "indent": 4, "text": ["This value is the simulation frame (see variable SF) at which the\n    current object was created. "]}, {"type": "para", "indent": 4, "text": ["This value is equivalent to using the\n    dopsttoframe expression on the OBJCT variable. This value will be\n    zero if the node does not process objects sequentially (such as the\n    ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "type": "dt", "indent": 0, "text": ["OBJCF"]}, {"body": [{"type": "para", "indent": 4, "text": ["This is a string value containing the name of the object being\n    processed. "]}, {"type": "para", "indent": 4, "text": ["Object names are not guaranteed to be unique within a\n    simulation. However, if you name your objects carefully so that they\n    are unique, the object name can be a much easier way to identify an\n    object than the unique object identifier, OBJID. "]}, {"type": "para", "indent": 4, "text": ["The object name can\n    also be used to treat a number of similar objects (with the same\n    name) as a virtual group. If there are 20 objects named \"myobject\",\n    specifying ", {"text": ["strcmp($OBJNAME, \"myobject\") == 0"], "type": "code"}, " in the activation field\n    of a DOP will cause that DOP to operate only on those 20 objects. This\n    value will be the empty string if the node does not process objects\n    sequentially (such as the ", {"text": ["Group DOP"], "fullpath": "/nodes/dop/group", "scheme": "Node", "type": "link", "value": "/nodes/dop/group"}, ")."]}], "type": "dt", "indent": 0, "text": ["OBJNAME"]}, {"body": [{"type": "para", "indent": 4, "text": ["This is a string value containing the full path of the current DOP\n    Network. This value is most useful in DOP subnet digital assets\n    where you want to know the path to the DOP Network that contains the\n    node."]}], "type": "dt", "indent": 0, "text": ["DOPNET"]}], "type": "dt_group", "container": true}, {"body": [{"body": [{"type": "para", "indent": 4, "text": ["Most dynamics nodes have local variables with the same names as the\n    node\u2019s parameters. For example, in a ", {"text": ["Position node"], "fullpath": "/nodes/dop/position", "scheme": "Node", "type": "link", "value": "/nodes/dop/position"}, ",\n    you could write the expression:"]}, {"lang": null, "type": "pre", "indent": 4, "text": ["\n    $tx + 0.1\n    "]}, {"type": "para", "indent": 4, "text": ["\u2026to make the object move 0.1 units along the X axis at each timestep."]}], "role": "item", "indent": 0, "type": "note"}], "role": "item_group", "container": true, "type": "note_group"}], "indent": 0, "level": 1, "text": "Locals", "role": "section", "container": true, "type": "locals_section", "id": "locals"}], "title": ["Rigid Body Solver"], "summary": [" Sets and configures a Rigid Body Dynamics solver. "], "attrs": {"version": null, "namespace": null, "internal": "rigidbodysolver", "context": "dop", "type": "node", "icon": "DOP/rbdsolver"}, "included": ["/nodes/dop/standard_data_outputs", "/nodes/dop/rbd_solver_substeps", "/nodes/dop/standard_datagroup_parms", "/nodes/dop/bullet_solver_parms", "/nodes/dop/standard_dataop_parms", "/nodes/dop/standard_locals", "/nodes/dop/standard_data_locals", "/nodes/dop/standard_dataname_parms", "/nodes/dop/standard_solver_parms", "/nodes/dop/standard_solver_mutualparms", "/nodes/dop/voronoi_fracture_solver_parms", "/nodes/dop/rbd_solver_collisions"], "type": "root"}