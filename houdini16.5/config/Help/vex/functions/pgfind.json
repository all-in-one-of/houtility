{"body": [{"indent": 0, "text": ["pgfind"], "type": "title", "level": 0}, {"indent": 0, "type": "summary", "text": ["Returns a list of closest points from a file."]}, {"body": [{"indent": 0, "role": "item", "type": "usage", "text": [" ", {"text": ["int [] pgfind(<geometry>, vector P, float radius, int maxpoints, float divsize)"], "type": "code"}]}, {"indent": 0, "role": "item", "type": "usage", "text": [" ", {"text": ["int [] pgfind(<geometry>, string ptgroup, vector P, float radius, int maxpoints, float divsize)"], "type": "code"}]}], "container": true, "role": "item_group", "type": "usage_group"}, {"body": [{"body": [{"type": "para", "indent": 4, "text": ["When running in the context of a node (such as a wrangle SOP), this argument can be an integer representing the input number (starting at 0) to read the geometry from."]}, {"type": "para", "indent": 4, "text": ["Alternatively, the argument can be a string specifying a geometry file (for example, a ", {"text": [".bgeo"], "type": "code"}, ") to read from. When running inside Houdini, this can be an ", {"text": ["op:/path/to/sop"], "type": "code"}, " reference."]}], "indent": 0, "text": [{"text": ["<geometry>"], "type": "code"}], "role": "item", "attrs": {"id": "geometry"}, "type": "arg"}], "container": true, "role": "item_group", "type": "arg_group"}, {"indent": 0, "type": "para", "text": ["These functions are very similar to the ", {"text": ["pcfind"], "type": "code"}, " functions.  The difference is that they use a grid-based acceleration structure.  This can provide faster initialization and lookups, provided the right grid size tuning parameter is used."]}, {"indent": 0, "type": "para", "text": ["If you are searching a point cloud using an near-constant search radius, that radius can be used as the division size."]}, {"body": [{"body": [{"indent": 2, "type": "para", "text": ["The division size must be not vary per point."]}], "indent": 0, "role": "item", "type": "note"}, {"body": [{"indent": 2, "type": "para", "text": ["The division size is clamped above 3.0\u00d710", {"text": ["5"], "tag": "sup", "type": "xml", "attrs": {}}, "."]}], "indent": 0, "role": "item", "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}, {"indent": 0, "type": "para", "text": ["The ", {"text": ["ptgroup"], "type": "code"}, " is a point group that limits the points to search.  This is a SOP-style group pattern, so can be something like ", {"text": ["0-10"], "type": "code"}, " or ", {"text": ["@Cd.x>0.5"], "type": "code"}, ".  A blank string is treated as matching all points."]}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "text": [{"text": "", "value": "/vex/functions/pcfind", "fallback_text": "pcfind()", "fullpath": "/vex/functions/pcfind", "scheme": "Vex", "type": "link"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": [{"text": "", "value": "/vex/functions/pcfind_radius", "fallback_text": "pcfind_radius()", "fullpath": "/vex/functions/pcfind_radius", "scheme": "Vex", "type": "link"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "container": true, "type": "related_section", "id": "related"}], "title": ["pgfind"], "summary": ["Returns a list of closest points from a file."], "attrs": {"showtags": "true", "group": "ptcloud", "type": "vex", "context": "all", "tags": "ptcloud, proximity"}, "included": ["/vex/functions/_common"], "type": "root"}