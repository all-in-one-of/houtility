{"body": [{"indent": 0, "text": ["primpoints"], "type": "title", "level": 0}, {"indent": 0, "type": "summary", "text": ["Returns the list of points on a primitive."]}, {"body": [{"indent": 0, "role": "item", "type": "usage", "text": [" ", {"text": ["int [] primpoints(<geometry>, int primnum)"], "type": "code"}]}], "container": true, "role": "item_group", "type": "usage_group"}, {"body": [{"body": [{"type": "para", "indent": 4, "text": ["When running in the context of a node (such as a wrangle SOP), this argument can be an integer representing the input number (starting at 0) to read the geometry from."]}, {"type": "para", "indent": 4, "text": ["Alternatively, the argument can be a string specifying a geometry file (for example, a ", {"text": [".bgeo"], "type": "code"}, ") to read from. When running inside Houdini, this can be an ", {"text": ["op:/path/to/sop"], "type": "code"}, " reference."]}], "indent": 0, "text": [{"text": ["<geometry>"], "type": "code"}], "role": "item", "attrs": {"id": "geometry"}, "type": "arg"}, {"body": [{"indent": 4, "type": "para", "text": ["The primitive number to get the points of."]}], "indent": 0, "role": "item", "type": "arg", "text": {"text": ["primnum"], "type": "code"}}, {"body": [{"indent": 4, "type": "para", "text": ["An array of points, in the same order as stored on the primitive itself.\n    If the primitive number is not valid, the array will be empty."]}], "indent": 0, "returns": true, "role": "item", "type": "arg"}], "container": true, "role": "item_group", "type": "arg_group"}], "title": ["primpoints"], "summary": ["Returns the list of points on a primitive."], "attrs": {"showtags": "true", "group": "geo", "type": "vex", "context": "all", "tags": "prim, point"}, "included": ["/vex/functions/_common"], "type": "root"}