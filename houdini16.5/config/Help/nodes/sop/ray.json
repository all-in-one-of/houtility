{"body": [{"indent": 0, "text": ["Ray"], "type": "title", "level": 0}, {"indent": 0, "type": "summary", "text": ["Projects one surface onto another."]}, {"indent": 0, "type": "para", "text": ["The Ray operator projects rays from each point of the first input\ngeometry in the direction of its normal, and then moves the point to any\ngeometry the ray hits from the second input."]}, {"indent": 0, "type": "para", "text": ["You can use this node to drape clothes over surfaces, shrink-wrap one\nobject with another, and other similar effects."]}, {"body": [{"body": [{"indent": 4, "blevel": 6, "type": "ord", "text": ["Click the ", {"text": "", "fullpath": "/shelf/SOP/ray", "scheme": "Icon", "type": "link", "value": "SOP/ray"}, {"text": ["Ray"], "fullpath": "/nodes/sop/ray", "scheme": "Node", "type": "link", "value": "/nodes/sop/ray"}, " tool on the ", {"text": ["Model"], "type": "ui"}, " tab."]}, {"indent": 4, "blevel": 6, "type": "ord", "text": ["Select the points or primitives to project and press ", {"keys": ["Enter"], "text": null, "type": "keys"}, " to confirm your selection."]}, {"indent": 4, "blevel": 6, "type": "ord", "text": ["Select the primitives to project on and press ", {"keys": ["Enter"], "text": null, "type": "keys"}, " to confirm your selection."]}], "container": true, "type": "ord_group"}, {"body": [{"body": [{"indent": 8, "type": "para", "text": ["This tool works best when smaller surfaces are projected onto larger surfaces."]}], "indent": 4, "role": "item", "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}, {"indent": 4, "type": "para", "text": [{"text": "", "fullpath": "/images/shelf/ray.png", "scheme": "Image", "type": "link", "value": "/images/shelf/ray.png"}]}], "indent": 0, "level": 2, "text": ["Using Ray"], "container": true, "type": "h", "id": "includeme"}, {"body": [{"body": [{"body": [{"indent": 4, "blevel": 6, "type": "ord", "text": ["Place a Grid node, set its ", {"text": ["Orientation"], "type": "ui"}, " to \"XY Plane\", and\n      translate it in Z by 2.5. Turn its template flag on."]}, {"indent": 4, "blevel": 6, "type": "ord", "text": ["Append a Point node to the Grid and change ", {"text": ["Keep Normal"], "type": "ui"}, " to ", {"text": ["Add Normal"], "type": "ui"}, " on the standard tab of the parameter editor."]}, {"indent": 4, "blevel": 6, "type": "ord", "text": ["Place a Sphere node, set its geometry type to NURBS, set its\n      radius to 2,2,2, and translate it in Z by -2.5 ."]}, {"indent": 4, "blevel": 6, "type": "ord", "text": ["Turn on the display of ", {"text": "", "fullpath": "/nodes/sop/VIEW/display_point_normals", "scheme": "Icon", "type": "link", "value": "VIEW/display_point_normals"}, " point normals in the viewer\u2019s right side toolbar."]}, {"indent": 4, "blevel": 6, "type": "ord", "text": ["Append a Ray node to the Point node and connect the Sphere to\n      the right input. Turn on its display flag."]}, {"indent": 4, "blevel": 6, "type": "ord", "text": ["Turn the ", {"text": ["Intersect farthest surface"], "type": "ui"}, " checkbox on to move\n      the projected plane onto the \"back\" of the sphere."]}], "container": true, "type": "ord_group"}], "indent": 0, "tag": "steps", "type": "pxml", "attrs": {}}, {"indent": 0, "type": "para", "text": ["The Ray op will move the points of the Grid in the direction of the\npoint normals. The first surface of the Collision Source (right\ninput) will be where those points of the grid will rest. You can\nmake those points rest on the other side of the sphere by enabling\nthe Intersect Farthest Surface option. This means that the points\nshould continue to project to the farthest surface of the collision\nsource."]}], "indent": 0, "level": 2, "text": ["Example"], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "text": ["Group of primitives or points to project."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Group"]}, {"body": [{"indent": 8, "type": "para", "text": ["Project points or primitives."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Entity"]}, {"body": [{"indent": 8, "type": "para", "text": ["Group of primitives to project on."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Collision Group"]}, {"body": [{"body": [{"body": [{"indent": 12, "type": "para", "text": ["Points are projected along their normals until intersecting\n            with collision geometry."]}], "indent": 8, "type": "dt", "text": ["Project Rays"]}, {"body": [{"indent": 12, "type": "para", "text": ["Points are placed on the closest point on the collision\n            geometry. This method does not use point normals. Use it to\n            shrinkwrap or project one primitive onto another."]}], "indent": 8, "type": "dt", "text": ["Minimum Distance"]}], "container": true, "type": "dt_group"}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Method"]}, {"body": [{"indent": 8, "type": "para", "text": ["How to determine the direction to send rays."]}, {"body": [{"body": [{"indent": 12, "type": "para", "text": ["A ray direction vector is explicitly provided."]}], "indent": 8, "type": "dt", "text": ["Vector"]}, {"body": [{"indent": 12, "type": "para", "text": ["Normals are computed, if necessary, on the input and used\n            as the ray direction."]}], "indent": 8, "type": "dt", "text": ["Normal"]}, {"body": [{"indent": 12, "type": "para", "text": ["A given attribute is used. It should be a 3-float vector\n            attribute giving the direction to send the rays in."]}], "indent": 8, "type": "dt", "text": ["Attribute"]}], "container": true, "type": "dt_group"}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Direction from"]}, {"body": [{"indent": 8, "type": "para", "text": ["Direction to project rays from each point."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Ray Direction"]}, {"body": [{"indent": 8, "type": "para", "text": ["The point attribute to use to determine ray direction."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Direction Attribute"]}, {"body": [{"indent": 8, "type": "para", "text": ["Controls if the geometry being instanced onto is drawn.  Does\n        not affect the behavior, only the viewport."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Show Guide Geometry"]}, {"body": [{"indent": 8, "type": "para", "text": ["Move the intersected geometry."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Transform Points"]}, {"body": [{"indent": 8, "type": "para", "text": ["Ray source is projected to farthest collision surface instead of\n        the closest."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Intersect Farthest Surface"]}, {"body": [{"indent": 8, "type": "para", "text": ["Ray point normals gets value of collision normals at points of\n        intersection. These are the surface normals and not interpolated\n        point normals. If you want the interpolated point normals, you\n        will need to turn on ", {"text": ["Get Point Attributes"], "type": "ui"}, " and specify the N\n        attribute. In that case, this option will have no effect."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Point Intersection Normal"]}, {"body": [{"indent": 8, "type": "para", "text": ["Ray point dist attribute gets value of distance to collision\n        source."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Point Intersection Distance"]}, {"body": [{"indent": 8, "type": "para", "text": ["Set this to make rays fire in the direction opposite to the\n        normals."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Reverse Rays"]}, {"body": [{"indent": 8, "type": "para", "text": ["Controls the tolerance of the ray intersection. Due to numerical round off, otherwise watertight geometry might let rays pass through it.  The ray tolerance decreases the chance of ray leakage by allowing near misses to count as hits. For very small geometry, you may want to decrease the default to avoid false positives.  Likewise, very large geometry may need a higher value."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Ray Tolerance"]}, {"body": [{"indent": 8, "type": "para", "text": ["When transforming points scale the intersection path."]}], "indent": 4, "text": ["Scale"], "role": "item", "attrs": {"channels": "/scale"}, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "text": ["Offset surface in normal direction after the points have been\n        transformed to their new locations."]}], "indent": 4, "text": ["Lift"], "role": "item", "attrs": {"channels": "/lift"}, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "text": ["The minimum distance along the normal from the original position\n        of the point where the rays will look for intersections. This\n        allows you to offset the starting position of the rays."]}], "indent": 4, "text": ["Bias"], "role": "item", "attrs": {"channels": "/bias"}, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "text": ["The maximum distance from the original position of the point the\n        rays will look at. No ray intersections outside this range will\n        be detected.  If ", {"text": ["Method"], "type": "ui"}, " is ", {"text": ["Minimum Distance"], "type": "ui"}, ", any points\n        farther from the surface than this will not be moved."]}], "indent": 4, "text": ["Max Distance"], "role": "item", "attrs": {"channels": "/maxraydist"}, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "text": ["Number of rays sent per point. If greater than 1, rays are\n        randomly perturbed and combined using the method specified in\n        ", {"text": ["Ray Combiner"], "type": "ui"}, "."]}], "indent": 4, "text": ["Sample"], "role": "item", "attrs": {"channels": "/sample"}, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "text": ["Controls perturbation of extra rays."]}], "indent": 4, "text": ["Jitter Scale"], "role": "item", "attrs": {"channels": "/jitter"}, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "text": ["This option lets you specify how information from extra rays is\n        used."]}, {"body": [{"body": [{"indent": 12, "type": "para", "text": ["The fired rays that hit the second input\u2019s geometry are\n            averaged. The point is then moved along its normal direction\n            by the average distance. If you turned on ", {"text": ["Point\n            Intersection Normal"], "type": "ui"}, ", the resulting normal is also the\n            average from all the fired rays."]}], "indent": 8, "type": "dt", "text": ["Average ray"]}, {"body": [{"indent": 12, "type": "para", "text": ["The median length ray that hits the second input\u2019s geometry\n            is found. The point is then moved along its normal direction\n            by the median ray\u2019s length. If you turned on ", {"text": ["Point\n            Intersection Normal"], "type": "ui"}, ", the resulting normal is taken from\n            the median ray."]}], "indent": 8, "type": "dt", "text": ["Median ray"]}, {"body": [{"indent": 12, "type": "para", "text": ["The shortest ray that hits the second input\u2019s geometry is\n            found. The point is then moved along its normal direction by\n            this ray\u2019s length. If you turned on ", {"text": ["Point Intersection\n            Normal"], "type": "ui"}, ", the resulting normal is taken from the shortest\n            ray."]}], "indent": 8, "type": "dt", "text": ["Shortest ray"]}, {"body": [{"indent": 12, "type": "para", "text": ["The Longest ray that hits the second input\u2019s geometry is\n            found. The point is then moved along its normal direction by\n            this ray\u2019s length. If you turned on ", {"text": ["Point Intersection\n            Normal"], "type": "ui"}, ", the resulting normal is taken from the longest\n            ray."]}], "indent": 8, "type": "dt", "text": ["Longest ray"]}], "container": true, "type": "dt_group"}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Ray Combiner"]}, {"body": [{"indent": 8, "type": "para", "text": ["Seeds the random number generator."]}], "indent": 4, "text": ["Seed"], "role": "item", "attrs": {"channels": "/seed"}, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "text": ["Point group of all successful intersections."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Create Point Group"]}, {"body": [{"indent": 8, "type": "para", "text": ["Name of the point group."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Ray Hit Group"]}, {"body": [{"indent": 8, "type": "para", "text": ["When enabled, an attribute will be output indicating the number of the primitive hit by each point.  Enable this and ", {"text": ["Prim UVW Attribute"], "type": "ui"}, " for use with\n        ", {"text": ["Attribute Interpolate"], "fullpath": "/nodes/sop/attribinterpolate", "scheme": "Node", "type": "link", "value": "/nodes/sop/attribinterpolate"}, ", to have the points stick on deforming geometry."]}], "indent": 4, "text": ["Prim Num Attribute"], "role": "item", "attrs": {"id": "primnumattrib"}, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "text": ["When enabled, an attribute will be output indicating the coordinates where each point hit, in the parameter space of the primitive each point hit.\n        Enable this and ", {"text": ["Prim Num Attribute"], "type": "ui"}, " for use with ", {"text": ["Attribute Interpolate"], "fullpath": "/nodes/sop/attribinterpolate", "scheme": "Node", "type": "link", "value": "/nodes/sop/attribinterpolate"}, ", to have the points stick on deforming geometry."]}], "indent": 4, "text": ["Prim UVW Attribute"], "role": "item", "attrs": {"id": "primuvwattrib"}, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "text": ["This allows you to extract point attributes from the hit\n        surface. The extracted attribute will take on an interpolated\n        value according to where the surface is hit. This option works\n        with the ", {"text": ["Ray Combiner"], "type": "ui"}, " option: the attribute value will\n        either come from the average attribute value from all the hits\n        or the value associated with the median length, shortest or\n        longest ray. The interpolated attribute values are not\n        normalized."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Get Point Attributes"]}, {"body": [{"indent": 8, "type": "para", "text": ["Specify the point attributes from the second input that you want\n        to extract. If the attributes you specify do not exist in the\n        first input, they will be created. If the attributes you specify\n        have the same name but a different size or type in the first\n        input, they will be overwritten. If you specify the normal\n        attribute here (N), the ", {"text": ["Point Intersection Normal"], "type": "ui"}, " option\n        will have no effect and the final normal set to each point will\n        be computed by interpolating the point normal from the target\n        surface."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Point Attributes"]}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "text": ["The geometry to project onto the geometry in the second input.\n        This geometry must have point normal attributes (use the ", {"text": ["Point\n        operator"], "fullpath": "/nodes/sop/point", "scheme": "Node", "type": "link", "value": "/nodes/sop/point"}, " to add them)."]}], "indent": 4, "type": "dt", "text": ["Ray points or primitives"]}, {"body": [{"indent": 8, "type": "para", "text": ["The geometry on which to project."]}], "indent": 4, "type": "dt", "text": ["Collision primitives"]}], "container": true, "type": "dt_group"}], "indent": 0, "level": 1, "text": "Inputs", "role": "section", "container": true, "type": "inputs_section", "id": "inputs"}, {"body": [{"body": [{"indent": 4, "blevel": 6, "type": "bullet", "text": [{"text": "", "fullpath": "/nodes/sop/creep", "scheme": "Node", "type": "link", "value": "/nodes/sop/creep"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "text": [{"text": "", "fullpath": "/nodes/sop/paste", "scheme": "Node", "type": "link", "value": "/nodes/sop/paste"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "text": [{"text": "", "fullpath": "/nodes/sop/project", "scheme": "Node", "type": "link", "value": "/nodes/sop/project"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "container": true, "type": "related_section", "id": "related"}], "title": ["Ray"], "summary": ["Projects one surface onto another."], "attrs": {"version": null, "tags": "project, model", "namespace": null, "internal": "ray", "context": "sop", "type": "node", "icon": "SOP/ray"}, "included": ["/shelf/ray"], "type": "root"}