{"body": [{"indent": 0, "text": ["Divide"], "type": "title", "level": 0}, {"indent": 0, "type": "summary", "text": ["Divides, smooths, and triangulates polygons."]}, {"indent": 0, "type": "para", "text": ["This operator performs two specific tasks:"]}, {"body": [{"indent": 0, "blevel": 2, "type": "bullet", "text": [{"text": ["Smooth"], "type": "strong"}, " by subdividing."]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": [{"text": ["Cleanup"], "type": "strong"}, " polygons: fix concave polygons, divide N-side polygons into\n  triangles or quads with optional brickered layout, triangulate\n  non-planar polygons."]}], "container": true, "type": "bullet_group"}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "text": ["The ", {"text": ["Clean surface node"], "fullpath": "/nodes/sop/clean", "scheme": "Node", "type": "link", "value": "/nodes/sop/clean"}, " also cleans up polygonal geometry,\n  and is more suitable for conditioning geometry to work as a cloth object."]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": ["Divide has an optional second input for rest geometry.  This input\n  applies only to the convexing functionality.  When the second input\n  is connected, the Divide node will use the points from the rest\n  geometry to perform convexing.  In order for this to work appropriately,\n  the point indices in the main input geometry must match those in the\n  rest geometry."]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": ["If you want to determine whether pieces in a fractured object are manifold, turn on the ", {"fragment": "#removesh", "text": ["Remove Shared Edges"], "value": "#removesh", "fullpath": "/nodes/sop/divide#removesh", "scheme": null, "type": "link"}, " checkbox. If you have closed manifold geometry, you should end up with no geometry."]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 2, "text": ["Notes"], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["Split all concave polygons to make them convex."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Convex Polygons"]}, {"body": [{"indent": 4, "type": "para", "text": ["Restrict the number of edges in each polygon to be equal to or\n    less than this number. If a polygon has more edges, it is\n    divided into smaller polygons."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Maximum Edges"]}, {"body": [{"indent": 4, "type": "para", "text": ["Triangulates non-planar primitives when turned on. A non-planar primitive is a primitive whose vertices do not all lie on the same plane. "]}, {"indent": 4, "type": "para", "text": ["The slider represents the tolerance at which to determine whether or not a primitive is non-planar. A planar primitive that is transformed or altered in some other way, could become non-planar due to numerical computation error. A value can be computed to measure how non-planar it is. If this measurement falls below the tolerance level, the primitive is deemed planar and does not get divided. Conversely, if the measurement is above the tolerance level, it is deemed non-planar and is divided."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Triangulate Non-Planar"]}, {"body": [{"indent": 4, "type": "para", "text": ["If ", {"text": ["Convex Polygons"], "type": "ui"}, " is enabled and a triangle with two or more coincident vertices would have been output, this indicates to not output the triangle.\n    Other degenerate polygons may also be omitted in this manner.  Note that this may make the resulting mesh non-watertight, or even disconnected,\n    so use with caution."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Don\u2019t Generate Slivers"]}, {"body": [{"indent": 4, "type": "para", "text": ["If ", {"text": ["Maximum Edges"], "type": "ui"}, " is 3 or ", {"text": ["Triangulate Non-Planar"], "type": "ui"}, " is selected, this improves the triangles in the triangulation by avoiding small angles, where possible."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Avoid Small Angles"]}, {"body": [{"indent": 4, "type": "para", "text": ["Subdivide adjacent non-flat polygons. Smoothed polygons must\n    have shared points."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Smooth Polygons"]}, {"body": [{"indent": 4, "type": "para", "text": ["Localizes the effect of polygon smoothing."]}], "indent": 0, "text": ["Weight"], "role": "item", "attrs": {"id": "weight1 /weight2"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["Number of levels of subdivision. Each level doubles the number\n    of polygons."]}], "indent": 0, "text": ["Divisions"], "role": "item", "attrs": {"id": "divs"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["Divide the polygon into a mesh-like series of polygons. This\n    aids in surface deformation operations."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Bricker Polygons"]}, {"body": [{"indent": 4, "type": "para", "text": ["Control the layout of brickered polygons."]}], "indent": 0, "text": ["Size, Offset, Angle"], "role": "item", "attrs": {"id": "sizex /sizey /sizez /offsetx /offsety /offsetz /anglex /angley /anglez"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["Controls if brickering will also divide the edges of polygons outside of the specified group, provided those edges were brickered inside the group.  This prevents the brickering from creating gaps by inserting T-junctions in the topology."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Bricker Shared Edges"]}, {"body": [{"indent": 4, "type": "para", "text": ["Remove common edges."]}], "indent": 0, "text": ["Remove Shared Edges"], "role": "item", "attrs": {"id": "removesh"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["Convert the polyhedron into its point/face dual."]}], "indent": 0, "role": "item", "type": "parameters_item", "text": ["Compute Dual"]}, {"body": [{"indent": 4, "type": "para", "text": ["When the ", {"text": ["Compute Dual"], "type": "ui"}, " option is enabled, these attributes and groups will be transferred from input points to corresponding output primitives and from input primitives to output points.\n    Any vertex attributes and groups matching this pattern will be transferred from input vertices to output vertices."]}], "indent": 0, "text": ["Attributes to Swap"], "role": "item", "attrs": {"id": "dualattribstoswap"}, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "text": [{"text": "", "fullpath": "/nodes/sop/clean", "scheme": "Node", "type": "link", "value": "/nodes/sop/clean"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": [{"text": "", "fullpath": "/nodes/sop/clip", "scheme": "Node", "type": "link", "value": "/nodes/sop/clip"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": [{"text": "", "fullpath": "/nodes/sop/cookie", "scheme": "Node", "type": "link", "value": "/nodes/sop/cookie"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": [{"text": "", "fullpath": "/nodes/sop/edgedivide", "scheme": "Node", "type": "link", "value": "/nodes/sop/edgedivide"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": [{"text": "", "fullpath": "/nodes/sop/polysplit", "scheme": "Node", "type": "link", "value": "/nodes/sop/polysplit"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "text": [{"text": "", "fullpath": "/nodes/sop/tridivide", "scheme": "Node", "type": "link", "value": "/nodes/sop/tridivide"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "container": true, "type": "related_section", "id": "related"}], "summary": ["Divides, smooths, and triangulates polygons."], "type": "root", "attrs": {"version": null, "tags": "polygons, topology, model", "namespace": null, "internal": "divide", "context": "sop", "type": "node", "icon": "SOP/divide"}, "title": ["Divide"]}