{"body": [{"indent": 0, "text": ["Instance"], "type": "title", "level": 0}, {"indent": 0, "type": "summary", "text": ["Instance Objects can instance other geometry, light, or even subnetworks of objects."]}, {"indent": 0, "type": "para", "text": ["Instance Objects can instance other geometry, light, or even subnetworks of objects. By enabling point instancing, the point geometry of the instance object is used to create multiple instances, similar to the copy SOP."]}, {"body": [{"body": [{"body": [{"body": [{"type": "para", "indent": 4, "text": ["The left menu chooses the order in which transforms are applied\n    (for example, scale, then rotate, then translate). This can change the\n    position and orientation of the object, in the same way that going a\n    block and turning east takes you to a different place than turning east\n    and then going a block."]}, {"type": "para", "indent": 4, "text": ["The right menu chooses the order in which to rotate around the\n    X, Y, and Z axes. Certain orders can make character joint\n    transforms easier to use, depending on the character."]}], "indent": 0, "text": ["Transform Order"], "role": "item", "attrs": {"id": "xord"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["Translation along XYZ axes."]}], "indent": 0, "text": ["Translate"], "role": "item", "attrs": {"id": "t"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["Degrees rotation about XYZ axes."]}], "indent": 0, "text": ["Rotate"], "role": "item", "attrs": {"id": "r"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["Non-uniform scaling about XYZ axes."]}], "indent": 0, "text": ["Scale"], "role": "item", "attrs": {"id": "s"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["Local origin of the object.\n    See also ", {"text": ["setting the pivot point"], "fullpath": "/basics/objects", "scheme": null, "type": "link", "value": "/basics/objects"}, " ."]}], "indent": 0, "text": ["Pivot"], "role": "item", "attrs": {"id": "p"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["Scale the object uniformly along all three axes."]}], "indent": 0, "text": ["Uniform Scale"], "role": "item", "attrs": {"id": "scale"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["Local origin of the object.\n    See also ", {"text": ["setting the pivot point"], "fullpath": "/basics/objects", "scheme": null, "type": "link", "value": "/basics/objects"}, " ."]}], "indent": 0, "text": ["Pivot"], "role": "item", "attrs": {"id": "p"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["This menu contains options for manipulating the\n    ", {"fragment": "#pretransform", "text": ["pre-transform"], "value": "/basics/objects#pretransform", "fullpath": "/basics/objects#pretransform", "scheme": null, "type": "link"}, " values. The pre-transform is an internal\n    transform that is applied prior to the regular transform parameters.\n    This allows you to change the frame of reference for the translate, rotate,\n    scale parameter values below without changing the overall transform."]}, {"body": [{"body": [{"indent": 8, "type": "para", "text": ["This reverts the translate, rotate, scale parameters to their\n        default values while maintaining the same overall transform."]}], "indent": 4, "type": "dt", "text": ["Clean Transform"]}, {"body": [{"indent": 8, "type": "para", "text": ["This sets the translate parameter to (0, 0, 0) while maintaining\n        the same overall transform."]}], "indent": 4, "type": "dt", "text": ["Clean Translates"]}, {"body": [{"indent": 8, "type": "para", "text": ["This sets the rotate parameter to (0, 0, 0) while maintaining the\n        same overall transform."]}], "indent": 4, "type": "dt", "text": ["Clean Rotates"]}, {"body": [{"indent": 8, "type": "para", "text": ["This sets the scale parameter to (1, 1, 1) while maintaining the\n        same overall transform."]}], "indent": 4, "type": "dt", "text": ["Clean Scales"]}, {"body": [{"indent": 8, "type": "para", "text": ["This removes the pre-transform by setting the translate, rotate,\n        and scale parameters in order to maintain the same overall\n        transform. Note that if there were shears in the pre-transform, it can not be completely removed."]}], "indent": 4, "type": "dt", "text": ["Extract Pre-transform"]}, {"body": [{"indent": 8, "type": "para", "text": ["This completely removes the pre-transform without changing any\n        parameters. This will change the overall transform of the object if\n        there are any non-default values in the translate, rotate, and\n        scale parameters."]}], "indent": 4, "type": "dt", "text": ["Reset Pre-transform"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Modify Pre-Transform"], "role": "item", "attrs": {"id": "pretransform"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["When the object is re-parented, maintain its current world position by\n    changing the object\u2019s transform parameters."]}], "indent": 0, "text": ["Keep Position When Parenting"], "role": "item", "attrs": {"id": "keeppos"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["When the object is being transformed, maintain the current world transforms \n    of its children by changing their transform parameters."]}], "indent": 0, "text": ["Child Compensation"], "role": "item", "attrs": {"id": "childcomp"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["Enable ", {"text": ["Constraints Network"], "type": "ui"}, " on the object."]}], "indent": 0, "text": ["Enable Constraints"], "role": "item", "attrs": {"id": "constraints_on"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["Path to a CHOP ", {"text": ["Constraints Network"], "type": "ui"}, ".\n    See also ", {"text": ["creating constraints"], "fullpath": "/character/constraints", "scheme": null, "type": "link", "value": "/character/constraints"}, "."]}, {"body": [{"body": [{"indent": 8, "type": "para", "text": ["You can you use the Constraints drop down button to activate one of the Constraints Shelf Tool. If you do so, the first pick session is filled automatically by nodes selected in the parameter panel."]}], "indent": 4, "role": "item", "type": "tip"}], "container": true, "role": "item_group", "type": "tip_group"}, {"body": [{"body": [{"indent": 8, "type": "para", "text": ["Lookat and Follow Path parameters on object nodes are deprecated in favor of ", {"text": ["Look At"], "fullpath": "/shelf/constraintlookat", "scheme": null, "type": "link", "value": "/shelf/constraintlookat"}, " and ", {"text": ["Follow Path"], "fullpath": "/shelf/constraintpath", "scheme": null, "type": "link", "value": "/shelf/constraintpath"}, " constraints.\n        The parameters are only hidden for now and you can set their visibitily if you do edit the node\u2019s parameter interface."]}], "indent": 4, "role": "item", "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}], "indent": 0, "text": ["Constraints"], "role": "item", "attrs": {"id": "constraints_path"}, "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"body": [{"body": [{"type": "para", "indent": 4, "text": ["Use the specified wireframe color"]}], "type": "parameters_item", "role": "item", "indent": 0, "text": ["Set Wireframe Color"]}, {"body": [{"type": "para", "indent": 4, "text": ["The display color of the object"]}], "type": "parameters_item", "role": "item", "indent": 0, "text": ["Wireframe Color"]}, {"body": [{"type": "para", "indent": 4, "text": ["Object is capable of being picked in the viewport."]}], "indent": 0, "text": ["Viewport Selecting Enabled"], "role": "item", "attrs": {"id": "picking"}, "type": "parameters_item"}, {"body": [{"type": "para", "indent": 4, "text": ["Script to run when the object is picked in the viewport. See\n    ", {"text": ["select scripts"], "fullpath": "/commands/_guide", "scheme": null, "type": "link", "value": "/commands/_guide"}, " ."]}], "indent": 0, "text": ["Select Script"], "role": "item", "attrs": {"id": "pickscript"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["Caches object transforms once Houdini calculates them. This is\n    especially useful for objects whose world space position is\n    expensive to calculate (such as ", {"text": ["Sticky objects"], "fullpath": "/nodes/obj/sticky", "scheme": "Node", "type": "link", "value": "/nodes/obj/sticky"}, "),\n    and objects at the end of long parenting chains (such as\n    ", {"text": ["Bones"], "fullpath": "/nodes/obj/bone", "scheme": "Node", "type": "link", "value": "/nodes/obj/bone"}, "). This option is turned on by default for Sticky and\n    Bone objects."]}, {"indent": 4, "type": "para", "text": ["See the ", {"text": ["OBJ Caching"], "type": "ui"}, " section of the\n    ", {"fragment": "#objcache", "text": ["Houdini Preferences"], "value": "/ref/windows/mainprefs#objcache", "fullpath": "/ref/windows/mainprefs#objcache", "scheme": null, "type": "link"}, " window\n    for how to control the size of the object transform cache."]}], "indent": 0, "text": ["Cache Object Transform"], "role": "item", "attrs": {"id": "cachedata"}, "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "text": ["Any open curves contained in this object will be lit when the viewport is set to do so."]}, {"indent": 4, "type": "para", "text": ["Turning this on will also use a GLSL shader better suited to hair if the ", {"text": ["whitehair"], "type": "code"}, " or ", {"text": ["guardhair"], "type": "code"}, " attributes are found in the geometry. "]}, {"indent": 4, "type": "para", "text": ["Curves with the ", {"text": ["width"], "type": "code"}, " attribute will also be rendered as thick ribbons with varying width in shaded modes."]}], "indent": 0, "text": ["Shade Open Curves In Viewport"], "role": "item", "attrs": {"id": "shadeopen"}, "type": "parameters_item"}], "type": "parameters_item_group", "container": true}], "indent": 4, "level": 3, "text": ["Viewing Options"], "container": true, "type": "h", "id": null}], "indent": 0, "level": 2, "text": ["Transform"], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["Whether or not this object is displayed in the viewport and rendered.\n    Turn on the checkbox to have Houdini use this parameter,\n    then set the value to 0 to hide the object in the viewport and not render it,\n    or 1 to show and render the object.\n    If the checkbox is off, Houdini ignores the value."]}], "indent": 0, "text": ["Display"], "role": "item", "attrs": {"id": "display"}, "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "text": ["Instance the given object\u2019s geometry."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Instance Object"]}, {"body": [{"body": [{"body": [{"indent": 12, "type": "para", "text": ["No point instancing. Instead, the instanced object simply replaces the instancing object. "]}], "indent": 8, "type": "dt", "text": ["Off"]}, {"body": [{"indent": 12, "type": "para", "text": ["Lets you modify any object-level rendering property (material assignment, shading, sampling, dicing, etc.) across point instances via an expression, using the ", {"text": ["instancepoint()"], "type": "code"}, " function to get the current point index. It also supports the same point attributes as fast point instancing. The variation is done at export time, and usually leads to much larger IFDs/RIBs and slower export."]}], "indent": 8, "type": "dt", "text": ["Full point instancing"]}, {"body": [{"indent": 12, "type": "para", "text": ["Renderable properties can only be varied across different point instances through a limited set of point attributes:", {"text": ["instance"], "type": "code"}, ", ", {"text": ["material_override"], "type": "code"}, ", and ", {"text": ["shop_materialpath"], "type": "code"}, ". The last two can be easily set by using the ", {"text": ["Material SOP"], "fullpath": "/nodes/sop/material", "scheme": "Node", "type": "link", "value": "/nodes/sop/material"}, ". Additionally, the object-level variations are ignored. For example, the ", {"text": ["instancepoint()"], "type": "code"}, " function will return zero. The variation is done at render time and has very little impact on the IFD size or export time. "]}], "indent": 8, "type": "dt", "text": ["Fast point instancing"]}], "container": true, "type": "dt_group"}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Point Instancing"]}, {"body": [{"indent": 8, "type": "para", "text": ["If point instancing, this parameter specifies the motion blur behavior\n        when rendering.  Each point will have an instance of geometry.\n        The transform of this instance is determined by the point\u2019s\n        position.  Transformation motion blur on the instance is\n        determined by the motion of the point.  The motion of the\n        points is controlled by this parameter."]}, {"body": [{"body": [{"indent": 12, "type": "para", "text": ["Do not perform motion blur."]}], "indent": 8, "type": "dt", "text": ["No Motion Blur"]}, {"body": [{"indent": 12, "type": "para", "text": ["Compute the point\u2019s position by evaluating the geometry at\n            sub-frame intervals.  This can be problematic if the point\n            count is changing frame to frame."]}], "indent": 8, "type": "dt", "text": ["Compute sub-frame geometry (deformation)"]}, {"body": [{"indent": 12, "type": "para", "text": ["The point\u2019s vector attribute \"v\" is used to extrapolate\n            the motion of the point."]}], "indent": 8, "type": "dt", "text": ["Use point velocity attribute"]}], "container": true, "type": "dt_group"}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Point Motion Blur"]}, {"body": [{"indent": 8, "type": "para", "text": ["This option specifies how instancing is performed when a Subnet Object\n        is specified as the Instance Object."]}, {"body": [{"body": [{"indent": 12, "type": "para", "text": ["Instance all objects within the subnet."]}], "indent": 8, "type": "dt", "text": ["All Objects"]}, {"body": [{"indent": 12, "type": "para", "text": ["Only instance the displayed objects from the subnet."]}], "indent": 8, "type": "dt", "text": ["Displayed Objects"]}, {"body": [{"indent": 12, "type": "para", "text": ["Use the pattern mask specified by the Subnetwork Pattern parameter."]}], "indent": 8, "type": "dt", "text": ["Specify by a pattern"]}], "container": true, "type": "dt_group"}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Subnetwork Filtering"]}, {"body": [{"indent": 8, "type": "para", "text": ["When Subnetwork Filtering is set to \"Specify by a pattern\", this\n        parameter gives the pattern mask for determining which objects are\n        rendered from the instanced Subnet object."]}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Subnetwork Pattern"]}, {"body": [{"indent": 8, "type": "para", "text": ["Specifies a Property SHOP that is used to resolve rendering parameter\n        values. At render time, this SHOP (if given) is used to resolve\n        rendering parameter values first, before looking for them on the\n        objects being instanced."]}, {"body": [{"body": [{"indent": 12, "type": "para", "text": ["It is also possible to attach a material to each point\n            using the ", {"text": ["Material SOP"], "fullpath": "/nodes/sop/material", "scheme": null, "type": "link", "value": "/nodes/sop/material"}, "."]}], "indent": 8, "role": "item", "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}], "indent": 4, "role": "item", "type": "parameters_item", "text": ["Override Properties"]}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Instance"], "container": true, "type": "h", "id": null}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["This is typically -1. However, if the object is performing point\n    instancing, then this variable will be set to the point number\n    of the template geometry. For the IPT variable to be active, the\n    Point Instancing parameter must be turned on in this object."]}, {"body": [{"body": [{"indent": 8, "type": "para", "text": ["This variable is deprecated. Use the\n        ", {"text": "", "value": "/expressions/instancepoint", "fallback_text": "instancepoint()", "fullpath": "/expressions/instancepoint", "scheme": "Exp", "type": "link"}, " expression function instead."]}], "indent": 4, "role": "item", "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}], "indent": 0, "type": "dt", "attrs": {"id": "ipt"}, "text": ["IPT"]}], "container": true, "type": "dt_group"}], "indent": 0, "level": 1, "text": "Locals", "role": "section", "container": true, "type": "locals_section", "id": "locals"}], "title": ["Instance"], "summary": ["Instance Objects can instance other geometry, light, or even subnetworks of objects."], "attrs": {"version": null, "tags": "objects, model", "namespace": null, "internal": "instance", "context": "obj", "type": "node", "icon": "OBJ/geo"}, "included": ["/nodes/obj/common", "/nodes/obj/misc_parms", "/props/_minmax_styles", "/props/mantra"], "type": "root"}