{"body": [{"body": [{"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["Turning on this option causes the ", {"text": ["RBD solver"], "fullpath": "/nodes/dop/rbdsolver", "scheme": "Node", "type": "link", "value": "/nodes/dop/rbdsolver"}, " to use a volume\n    representation of this object for collision detection. "]}, {"indent": 4, "type": "para", "text": ["The volume representation results in very fast collision detection\n    and very robust results that are tolerant of temporary\n    interpenetrations. The disadvantage is that a volume\n    representation cannot be used to represent a flat object such as\n    a grid, or a hollow sphere. "]}, {"indent": 4, "type": "para", "text": ["When this toggle is turned off, the collision detection is geometry-based rather than volume-based. \n    In this case, the collision code will track the trajectories of moving objects over time to find out whether collisions occurred.\n    This allows more accurate results than volume-based collision detection.\n    For this to work, ", {"text": ["Cache Simulation"], "type": "ui"}, " must be enabled on the DOP network."]}], "indent": 0, "type": "dt", "text": ["Use Volume Based Collision Detection"]}, {"body": [{"indent": 4, "type": "para", "text": ["The internal representation used for collision detection is\n    converted to visible geometry. This is useful for debugging\n    problems with collision detection."]}, {"indent": 4, "type": "para", "text": ["This parameter controls the color of the guide geometry."]}], "indent": 0, "type": "dt", "text": ["Collision Guide"]}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "text": ["Use ray intersection with the geometry to create an\n        accurate volumetric representation of the geometry."]}], "indent": 4, "type": "dt", "text": ["Ray Intersect"]}, {"body": [{"indent": 8, "type": "para", "text": ["Instead of using rays to determine if points are inside or\n        outside, evaluate the metaball field.  "]}, {"indent": 8, "type": "para", "text": ["This should be used\n        with ", {"text": ["Laser Scanning"], "type": "ui"}, " turned off on geometry that consists\n        solely of metaballs."]}], "indent": 4, "type": "dt", "text": ["Meta Balls"]}, {"body": [{"indent": 8, "type": "para", "text": ["Calculate the bounding box for the geometry, and create a volumetric representation that precisely fills that bounding box. This box is always axis aligned in the DOP object\u2019s local space, which is set by the position data."]}, {"body": [{"body": [{"indent": 12, "type": "para", "text": [{"text": ["Use Object Transform"], "type": "ui"}, " bakes the object transform into the geometry\u2019s transform, leaving the ", {"text": ["Position Data"], "type": "ui"}, " in world space. Turning this off causes the object transform to be send to the ", {"text": ["Position Data"], "type": "ui"}, ", which causes the object\u2019s local space to be reoriented."]}], "indent": 8, "role": "item", "type": "note"}], "container": true, "role": "item_group", "type": "note_group"}], "indent": 4, "type": "dt", "text": ["Implicit Box"]}, {"body": [{"indent": 8, "type": "para", "text": ["Calculate the bounding sphere for the geometry, and create\n        a volumetric representation that precisely fills that\n        bounding sphere."]}], "indent": 4, "type": "dt", "text": ["Implicit Sphere"]}, {"body": [{"indent": 8, "type": "para", "text": ["Calculate the bounding box for the geometry, and create a\n        volumetric representation that divides that box along its\n        smallest axis. Everything below that plane is considered\n        inside, and everything above is outside. "]}, {"indent": 8, "type": "para", "text": ["This mode is primarily useful for creating ground planes or immovable\n        walls."]}], "indent": 4, "type": "dt", "text": ["Implicit Plane"]}, {"body": [{"indent": 8, "type": "para", "text": ["Use the distance to the surface or curve.  If the Offset\n        Surface is 0, no volume will be made.  A positive offset\n        surface will create just that - an offset volume around\n        the object\u2019s surface.  This is useful for turning thin\n        objects or wires into actual solids."]}], "indent": 4, "type": "dt", "text": ["Minimum"]}, {"body": [{"indent": 8, "type": "para", "text": ["The divisions are ignored in this mode, instead they are\n        computed from the first volume or VDB primitive in the geometry.\n        The computed divisions are chosen to match the voxel\n        size of the source volume.\n        The volume primitive is sampled raw and treated as a\n        signed distance field.  The assumption is that the source\n        is the output of an ", {"text": ["Iso Offset"], "fullpath": "/nodes/sop/isooffset", "scheme": "Node", "type": "link", "value": "/nodes/sop/isooffset"}, " or\n        ", {"text": ["VDB From Polygons"], "fullpath": "/nodes/sop/vdbfrompolygons", "scheme": "Node", "type": "link", "value": "/nodes/sop/vdbfrompolygons"}, " SOP.  If it isn\u2019t a true\n        signed distance fields, unusual things may happen with RBD\n        collisions."]}], "indent": 4, "type": "dt", "text": ["Volume Sample"]}], "container": true, "type": "dt_group"}], "indent": 0, "type": "dt", "text": ["Mode"]}, {"body": [{"indent": 4, "type": "para", "text": ["If ", {"text": ["Non Square"], "type": "ui"}, " is chosen, the specified size is divided into the given number\n    of divisions of voxels.  However, the sides of these voxels may not be\n    equal, possibly leading to distorted simulations."]}, {"indent": 4, "type": "para", "text": ["When an axis is specified, that axis is considered authoritative\n    for determining the number of divisions.  The chosen axis' size\n    will be divided by the uniform divisions to yield the voxel\n    size.  The divisions for the other axes will then be adjusted to\n    the closest integer multiple that fits in the required size."]}, {"indent": 4, "type": "para", "text": ["Finally, the size along non-chosen axes will be changed to\n    represent uniform voxel sizes.  If the ", {"text": ["Max Axis"], "type": "ui"}, " option is chosen,\n    the maximum sized axis is used."]}, {"indent": 4, "type": "para", "text": ["When ", {"text": ["By Size"], "type": "ui"}, " is chosen, the ", {"text": ["Division Size"], "type": "ui"}, " will be used to\n    compute the number of voxels that fit in the given sized box."]}], "indent": 0, "type": "dt", "attrs": {"id": "sdf_uniformvoxels"}, "text": ["Division Method"]}, {"body": [{"indent": 4, "type": "para", "text": ["Controls the creation of the volumetric representation of this\n    object. This should be set fine enough to capture the desired\n    features of the geometry."]}], "indent": 0, "type": "dt", "text": ["Divisions"]}, {"body": [{"indent": 4, "type": "para", "text": ["The resolution of the key axis on the voxel grid.  This allows you\n    to control the overall resolution with one parameter and still\n    preserve uniform voxels.  The ", {"text": ["Uniform Voxels"], "type": "ui"}, " option specifies\n    which axis should be used as the reference. It is usually safest\n    to use the maximum axis."]}], "indent": 0, "type": "dt", "attrs": {"id": "sdf_uniformdiv"}, "text": ["Uniform Divisions"]}, {"body": [{"indent": 4, "type": "para", "text": ["The explicit size of the voxels.  The number of voxels will be\n    computed by fitting an integer number of voxels of this size into\n    the given bounds."]}], "indent": 0, "type": "dt", "text": ["Division Size"]}, {"body": [{"indent": 4, "type": "para", "text": ["In laser scan mode the volumetric representation is built by\n    sending rays along the primary axes. Only the closest and\n    farthest intersections are used. The space between these two\n    points is classified as inside, and the rest outside."]}, {"indent": 4, "type": "para", "text": ["The laser scan mode will work even with geometry which has\n    poorly defined normals, self intersects, or is not fully\n    watertight. The disadvantage is that interior features can\u2019t be\n    represented as they are not detected."]}, {"indent": 4, "type": "para", "text": ["When laser scanning is turned off, the volumetric\n    representation is still built by sending rays along the primary\n    axes. All intersections are found, however. Each pair of\n    intersections is tested to see if the segment is inside or\n    outside. This relies on the normal of the geometry being well\n    defined (i.e., manifold, no self intersections), and the\n    geometry being watertight. Complicated shapes with holes can be\n    accurately represented, however."]}], "indent": 0, "type": "dt", "text": ["Laser Scan"]}, {"body": [{"indent": 4, "type": "para", "text": ["Even with the best made geometry, numerical imprecision can\n    result in incorrect sign choices. This option will cause the\n    volumetric representation to be post-processed to look for\n    inconsistent signs. These are then made consistent, usually\n    plugging leaks and filling holes."]}, {"indent": 4, "type": "para", "text": ["This takes time, and can be turned off in cases where the\n    volumetric representation is known to generate without problems."]}], "indent": 0, "type": "dt", "text": ["Fix Signs"]}, {"body": [{"indent": 4, "type": "para", "text": ["The ", {"text": ["Fix Signs"], "type": "ui"}, " method alone will smooth out, and usually\n    eliminate, sign inversions. However, it is possible for regions\n    of wrong-sign to become stabilized at the boundary of the\n    volumetric representation. This option will force all voxels on\n    the boundary to be marked as exterior. The ", {"text": ["Fix Signs"], "type": "ui"}, " method\n    will be much less likely to stabilize incorrectly then."]}], "indent": 0, "type": "dt", "text": ["Force Bounds"]}, {"body": [{"indent": 4, "type": "para", "text": ["If you want a hollow box, one method is to build one box inside\n    the other and not use ", {"text": ["Laser Scanning"], "type": "ui"}, ". A more robust method\n    is to just specify the inner box and use sign inversion. This\n    treats everything outside of the box as inside, allowing the\n    more robust ", {"text": ["Laser Scanning"], "type": "ui"}, " method to be used."]}], "indent": 0, "type": "dt", "text": ["Invert Sign"]}, {"body": [{"indent": 4, "type": "para", "text": ["After the fix signs process is complete there can still be\n    inconsistent areas in the SDF.  Large blocks can become\n    stabilized and stick out of the SDF.  A second sign sweep pass\n    can be performed to try to eliminate these blocks."]}, {"indent": 4, "type": "para", "text": ["The sign sweep threshold governs how big of a jump has to\n    occur for a sign transition to be considered inconsistent.  If\n    the values of the sdf change by more than this threshold times\n    the width of the cell, it is considered an invalid sign\n    transition.  The original geometry is then ray intersected to\n    determine inside/outside and the result used to determine\n    which sign is correct.  The correct sign is then propagated\n    forward through the model."]}], "indent": 0, "type": "dt", "attrs": {"id": "sdf_sweepalpha"}, "text": ["Sign Sweep Threshold"]}, {"body": [{"indent": 4, "type": "para", "text": ["The sign sweeps are repeated until no signs are flipped (ie,\n    all transitions are within the threshold) or this maximum is\n    reached.  Too low of a sign sweep threshold may prevent the\n    process from converging.  Otherwise, it tends to converge very\n    quickly."]}], "indent": 0, "type": "dt", "attrs": {"id": "sdf_sweepcount"}, "text": ["Max Sign Sweep Count"]}, {"body": [{"indent": 4, "type": "para", "text": ["A constant amount to offset the signed distance field by.\n    This can be used grow the object slightly or shrink it.  Note\n    that it can\u2019t be grown much beyond its original size or it\n    will hit the bounding box of the signed distance field."]}], "indent": 0, "type": "dt", "text": ["Offset Surface"]}, {"body": [{"indent": 4, "type": "para", "text": ["This specifies the tolerance used for ray intersections\n    when computing the SDF. This value is multiplied by the size\n    of the geometry and is scale invariant."]}], "indent": 0, "type": "dt", "attrs": {"id": "sdf_tol"}, "text": ["Tolerance"]}, {"body": [{"indent": 4, "type": "para", "text": ["The geometry which will be used rather than the base geometry for\n    computing the SDF.  This can be a volume or VDB in the case of Volume Sample\n    mode to allow one better control over the cached data."]}], "indent": 0, "type": "dt", "text": ["Proxy Volume"]}, {"body": [{"indent": 4, "type": "para", "text": ["Controls the operation for this object\u2019s volume data."]}, {"body": [{"body": [{"indent": 8, "type": "para", "text": ["If a file with the specified name exists already, it is\n        read from disk. Otherwise the volume is created based on the\n        other parameters on this page, and the specified file is\n        created on disk. This file will never be deleted\n        automatically, even when exiting the application."]}], "indent": 4, "type": "dt", "text": ["Automatic"]}, {"body": [{"indent": 8, "type": "para", "text": ["The specified file is read from disk."]}], "indent": 4, "type": "dt", "text": ["Read Files"]}, {"body": [{"indent": 8, "type": "para", "text": ["The volume is created using the other parameters on this\n        page, and is then written to the specified file on disk."]}], "indent": 4, "type": "dt", "text": ["Write Files"]}, {"body": [{"indent": 8, "type": "para", "text": ["The file is never read or written. The parameters on this\n        page are used to create the volume."]}], "indent": 4, "type": "dt", "text": ["No Operation"]}], "container": true, "type": "dt_group"}], "indent": 0, "type": "dt", "text": ["File Mode"]}, {"body": [{"indent": 4, "type": "para", "text": ["The name of the file to access according to the choice of File\n    Modes above.  This is always .simdata file format.  Saving to\n    a .bgeo extension will ", {"text": ["not"], "type": "strong"}, " save a .bgeo file."]}], "indent": 0, "type": "dt", "text": ["File"]}], "container": true, "type": "dt_group"}], "indent": 0, "level": 3, "text": ["Volume"], "container": true, "type": "h", "id": "volume"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "text": ["Chooses between colliding points against volume or colliding\n    edges against volume. "]}, {"indent": 4, "type": "para", "text": ["Optionally, the point attributes ", {"text": ["nopointvolume"], "type": "code"}, " and ", {"text": ["noedgevolume"], "type": "code"}, " may be added to the geometry to disable individual points/edges from participating in\n    collision detection against a volume object. An edge is disabled\n    if either of its endpoints is disabled."]}], "indent": 0, "type": "dt", "text": ["Surface Representation"]}, {"body": [{"indent": 4, "type": "para", "text": ["This enables conversion of primitives (such as spheres) in the\n    geometry into polygons. Only polygons are used for collision\n    detection."]}], "indent": 0, "type": "dt", "text": ["Convert To Poly"]}, {"body": [{"indent": 4, "type": "para", "text": ["When this flag is turned on, polygons in the geometry are\n    triangulated."]}], "indent": 0, "type": "dt", "text": ["Triangulate"]}, {"body": [{"indent": 4, "type": "para", "text": ["This controls the Level Of Detail of the triangulation. It is\n    used to specify the point density in the U and V directions."]}], "indent": 0, "type": "dt", "text": ["LOD "]}, {"body": [{"indent": 4, "type": "para", "text": ["The barycenters of each polygon can be included in the\n    collision detection as points or edges (connected to the\n    vertices of the primitive)."]}], "indent": 0, "type": "dt", "text": ["Add Barycenters"]}], "container": true, "type": "dt_group"}], "indent": 0, "level": 3, "text": ["Surface"], "container": true, "type": "h", "id": null}], "indent": 0, "level": 2, "text": ["Collisions"], "container": true, "type": "h", "id": null}], "type": "root", "attrs": {"type": "include"}}